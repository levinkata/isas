@model Isas.Models.InsurerViewModels.PayablesViewModel

@{
    ViewData["Title"] = "Payables";
}

<hr />
<form asp-action="Index">
    <div class="form-horizontal">
        <input type="hidden" asp-for="ProductID" />
        <div class="form-group">
            <label asp-for="PaymentTypeID" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <select asp-for="PaymentTypeID" class="form-control" asp-items="@Model.PaymentTypeList"></select>
            </div>
        </div>
    </div>
</form>

<br /><br />
<hr />
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Payee
            </th>
            <th id="RefHeader">
                Reference
            </th>
            <th>
                Date
            </th>
            <th>
                Payment Type
            </th>
            <th>
                Amount
            </th>
            <th>
                Batch Number
            </th>
        </tr>
    </thead>
    <tbody id="payablesTab">
@foreach (var item in Model.Payables) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ClaimTransaction.FirstOrDefault().Payee.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reference)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PayableDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentType.Name)
            </td>
            <td align="right">
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BatchNumber)
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script type="text/javascript" src="~/lib/jquery/dist/jquery.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#PaymentTypeID').on('change', function () {
                var selectedTypeId = $("#PaymentTypeID").val();
                var productid = $("#ProductID").val();

                $.ajax({
                    url: '@(Url.Action("PopulateTable"))',
                    type: 'GET',
                    dataType: 'JSON',
                    data: { productId: productid, paymentTypeId: selectedTypeId },
                    success: function (data) {
                        var row = "";
                        $.each(data, function (index, value) {
                            var newdate = $.date(value.payableDate);
                            var input = value.amount;
                            row += "<tr><td>" + value.payee + "</td><td>" + value.reference +
                                "</td><td>" + newdate + "</td><td>" + value.paymentType +
                                "</td><td align='right'>" + input.numberFormat(2) +
                                "</td><td>" + value.batchNumber + "</td></tr>";
                        });
                        $("#payablesTab").html(row);
                    },
                    error: function (result) {
                        alert("Error");
                    }
                });

            });

            $.date = function (dateObject) {
                var d = new Date(dateObject);
                var day = d.getDate();
                var month = d.getMonth() + 1;
                var year = d.getFullYear();
                if (day < 10) {
                    day = "0" + day;
                }
                if (month < 10) {
                    month = "0" + month;
                }
                var date = day + "/" + month + "/" + year;

                return date;
            };

            Number.prototype.numberFormat = function (decimals, dec_point, thousands_sep) {
                dec_point = typeof dec_point !== 'undefined' ? dec_point : '.';
                thousands_sep = typeof thousands_sep !== 'undefined' ? thousands_sep : ',';

                var parts = this.toFixed(decimals).split('.');
                parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, thousands_sep);

                return parts.join(dec_point);
            };

        });
    </script>
}